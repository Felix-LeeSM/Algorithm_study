'''
연구소 3 성공
 
시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
0.25 초 (하단 참고)	512 MB	32041	9360	5356	25.635%
문제
인체에 치명적인 바이러스를 연구하던 연구소에 승원이가 침입했고, 바이러스를 유출하려고 한다.
바이러스는 활성 상태와 비활성 상태가 있다. 
가장 처음에 모든 바이러스는 비활성 상태이고,
활성 상태인 바이러스는 상하좌우로 인접한 모든 빈 칸으로 동시에 복제되며, 1초가 걸린다. 
승원이는 연구소의 바이러스 M개를 활성 상태로 변경하려고 한다.

연구소는 크기가 N×N인 정사각형으로 나타낼 수 있으며, 정사각형은 1×1 크기의 정사각형으로 나누어져 있다.
연구소는 빈 칸, 벽, 바이러스로 이루어져 있으며, 벽은 칸 하나를 가득 차지한다. 
활성 바이러스가 비활성 바이러스가 있는 칸으로 가면 비활성 바이러스가 활성으로 변한다.

예를 들어, 아래와 같이 연구소가 생긴 경우를 살펴보자. 0은 빈 칸, 1은 벽, 2는 바이러스의 위치이다.

2 0 0 0 1 1 0
0 0 1 0 1 2 0
0 1 1 0 1 0 0
0 1 0 0 0 0 0
0 0 0 2 0 1 1
0 1 0 0 0 0 0
2 1 0 0 0 0 2
M = 3이고, 바이러스를 아래와 같이 활성 상태로 변경한 경우 6초면 모든 칸에 바이러스를 퍼뜨릴 수 있다. 
벽은 -, 비활성 바이러스는 *, 활성 바이러스는 0, 빈 칸은 바이러스가 퍼지는 시간으로 표시했다.

* 6 5 4 - - 2
5 6 - 3 - 0 1
4 - - 2 - 1 2
3 - 2 1 2 2 3
2 2 1 0 1 - -
1 - 2 1 2 3 4
0 - 3 2 3 4 *
시간이 최소가 되는 방법은 아래와 같고, 4초만에 모든 칸에 바이러스를 퍼뜨릴 수 있다.

0 1 2 3 - - 2
1 2 - 3 - 0 1
2 - - 2 - 1 2
3 - 2 1 2 2 3
3 2 1 0 1 - -
4 - 2 1 2 3 4
* - 3 2 3 4 *
연구소의 상태가 주어졌을 때, 모든 빈 칸에 바이러스를 퍼뜨리는 최소 시간을 구해보자.

입력
첫째 줄에 연구소의 크기 N(4 ≤ N ≤ 50), 놓을 수 있는 바이러스의 개수 M(1 ≤ M ≤ 10)이 주어진다.

둘째 줄부터 N개의 줄에 연구소의 상태가 주어진다.
0은 빈 칸, 1은 벽, 2는 바이러스를 놓을 수 있는 위치이다.
2의 개수는 M보다 크거나 같고, 10보다 작거나 같은 자연수이다.

출력
연구소의 모든 빈 칸에 바이러스가 있게 되는 최소 시간을 출력한다. 
바이러스를 어떻게 놓아도 모든 빈 칸에 바이러스를 퍼뜨릴 수 없는 경우에는 -1을 출력한다.

예제 입력 1 
7 3
2 0 0 0 1 1 0
0 0 1 0 1 2 0
0 1 1 0 1 0 0
0 1 0 0 0 0 0
0 0 0 2 0 1 1
0 1 0 0 0 0 0
2 1 0 0 0 0 2
예제 출력 1 
4

예제 입력 2 
7 3
2 0 2 0 1 1 0
0 0 1 0 1 2 0
0 1 1 2 1 0 0
2 1 0 0 0 0 2
0 0 0 2 0 1 1
0 1 0 0 0 0 0
2 1 0 0 2 0 2
예제 출력 2 
4

예제 입력 3 
7 4
2 0 2 0 1 1 0
0 0 1 0 1 2 0
0 1 1 2 1 0 0
2 1 0 0 0 0 2
0 0 0 2 0 1 1
0 1 0 0 0 0 0
2 1 0 0 2 0 2
예제 출력 3 
4

예제 입력 4 
7 5
2 0 2 0 1 1 0
0 0 1 0 1 2 0
0 1 1 2 1 0 0
2 1 0 0 0 0 2
0 0 0 2 0 1 1
0 1 0 0 0 0 0
2 1 0 0 2 0 2
예제 출력 4 
3

예제 입력 5 
7 3
2 0 2 0 1 1 0
0 0 1 0 1 0 0
0 1 1 1 1 0 0
2 1 0 0 0 0 2
1 0 0 0 0 1 1
0 1 0 0 0 0 0
2 1 0 0 2 0 2
예제 출력 5 
7

예제 입력 6 
7 2
2 0 2 0 1 1 0
0 0 1 0 1 0 0
0 1 1 1 1 0 0
2 1 0 0 0 0 2
1 0 0 0 0 1 1
0 1 0 0 0 0 0
2 1 0 0 2 0 2
예제 출력 6 
-1

예제 입력 7 
5 1
2 2 2 1 1
2 1 1 1 1
2 1 1 1 1
2 1 1 1 1
2 2 2 1 1
예제 출력 7 
0
'''

# https://www.acmicpc.net/problem/17142

import collections
import itertools


n, m = map(int, input().split())
INF = 1e9
vector = ((0, 1), (0, -1), (1, 0), (-1, 0))
virus = []
walls = []
blanks = []
board = []
for i in range(n):
    line = list(map(int, input().split()))
    for j in range(n):
        if line[j] == 2:
            virus.append((i, j))
        elif line[j] == 1:
            walls.append((i, j))
        else:
            blanks.append((i, j))
    board.append(line)

dists = [[[INF]*len(virus) for _ in range(n)] for _ in range(n)]
for i, j in walls:
    dists[i][j] = [0]*len(virus)

queue = collections.deque([(0, i, j, idx) for idx, (i, j) in enumerate(virus)])
while queue:
    d, x, y, idx = queue.popleft()
    for dir in range(4):
        nx, ny = x+vector[dir][0], y+vector[dir][1]
        if 0 <= nx < n and 0 <= ny < n and dists[nx][ny][idx] > d+1:
            dists[nx][ny][idx] = d+1
            queue.append((d+1, nx, ny, idx))
for i, j in virus:
    dists[i][j] = [0]*len(virus)

ans = INF
for eachCase in itertools.combinations(range(len(virus)), m):
    temp = 0
    for i in range(n):
        for j in range(n):
            temp = max(temp, min([dists[i][j][each] for each in eachCase]))
    ans = min(ans, temp)
print(ans if ans != INF else -1)

# 0은 빈 칸, 1은 벽, 2는 바이러스의 위치이다.
# virus들 중에서 m개를 활성화시켜서, 퍼트린다.
# 최소값을 구하라
# nCr개를 BFS로 돌아봐야 하면, 너무 심하다.
# 바이러스까지 걸리는 시간을 따진다?
# 그런데 바이러스까지 도달해도 쥰내 구석탱이에 쳐박혀 있어서
# 뭘 고르던 벽이 먼저일 수가 있음.
# 바이러스로 가득 차기만 해도 돼서, 비활성 바이러스 자리는 감염시킬 수는 있지만 감염시킬 필요는 없음.

# 브루트포스다...
