'''
별 찍기 - 10 성공
 
시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
1 초	256 MB	60030	32368	24205	53.924%
문제
재귀적인 패턴으로 별을 찍어 보자. N이 3의 거듭제곱(3, 9, 27, ...)이라고 할 때, 크기 N의 패턴은 N×N 정사각형 모양이다.

크기 3의 패턴은 가운데에 공백이 있고, 가운데를 제외한 모든 칸에 별이 하나씩 있는 패턴이다.

***
* *
***
N이 3보다 클 경우, 크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다. 
예를 들어 크기 27의 패턴은 예제 출력 1과 같다.

입력
첫째 줄에 N이 주어진다. N은 3의 거듭제곱이다. 즉 어떤 정수 k에 대해 N=3k이며, 이때 1 ≤ k < 8이다.

출력
첫째 줄부터 N번째 줄까지 별을 출력한다.

예제 입력 1 
27
예제 출력 1 
***************************
* ** ** ** ** ** ** ** ** *
***************************
***   ******   ******   ***
* *   * ** *   * ** *   * *
***   ******   ******   ***
***************************
* ** ** ** ** ** ** ** ** *
***************************
*********         *********
* ** ** *         * ** ** *
*********         *********
***   ***         ***   ***
* *   * *         * *   * *
***   ***         ***   ***
*********         *********
* ** ** *         * ** ** *
*********         *********
***************************
* ** ** ** ** ** ** ** ** *
***************************
***   ******   ******   ***
* *   * ** *   * ** *   * *
***   ******   ******   ***
***************************
* ** ** ** ** ** ** ** ** *
***************************
'''

ASTERISK = '*'
BLANK = ' '
queue = [(0, 0), (1, 0), (2, 0), (0, 1), (2, 1), (0, 2), (1, 2), (2, 2)]


def solution(k, offset_x, offset_y, board):
    mark_blank(k, offset_x, offset_y, board)

    if k > 1:
        for i, j in queue:
            solution(k-1, offset_x + i*3**(k-1),
                     offset_y + j*3**(k-1), board)

    return board


def mark_blank(k, offset_x, offset_y, board):
    side = 3**(k-1)
    center_x, center_y = offset_x + side, offset_y + side

    for x in range(center_x, center_x+side):
        for y in range(center_y, center_y+side):
            board[x][y] = BLANK


N = int(input())
k = 0
while N > 1:
    N //= 3
    k += 1

board = solution(k, 0, 0, [[ASTERIC]*3**k for _ in range(3**k)])

for line in board:
    print(*line, sep='')
